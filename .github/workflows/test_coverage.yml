name: test_coverage

on: [push]


jobs:
  linux_test:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build images
        run: make docker_up

      - name: set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: install dependencies
        run: |
            make venv
        shell: bash

      - name: build coverage file
        run: |
          make test
        shell: bash

  other_test:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        os: [macOS-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: install dependencies
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
              python -m pip install --upgrade pip
              pip install -e .[devel_full]
          else
              make venv
          fi
        shell: bash

      - name: build coverage file
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            pytest --cache-clear --cov=dff tests/ > pytest-coverage.txt
          else
            make test
          fi
        shell: bash