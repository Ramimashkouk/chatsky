name: test_coverage

on: [push]


jobs:
  docker-compose:
    runs-on: ubuntu-latest
    services:
      mysql:
        env_file: [ .env_file ]
        image: mysql:latest
        restart: unless-stopped
        ports:
          - 3307:3306
      psql:
        env_file: [ .env_file ]
        image: postgres:latest
        restart: unless-stopped
        ports:
          - 5432:5432
      redis:
        env_file: [ .env_file ]
        image: redis:latest
        restart: unless-stopped
        command: --requirepass pass
        ports:
          - 6379:6379
      mongo:
        env_file: [ .env_file ]
        image: mongo:latest
        restart: unless-stopped
        ports:
          - 27017:27017
      ydb:
        env_file: [ .env_file ]
        image: cr.yandex/yc/yandex-docker-local-ydb:latest
        restart: unless-stopped
        ports:
          - 8765:8765
          - 2136:2136
        hostname: localhost
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        os: [ubuntu-latest, macOS-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: install dependencies
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
              python -m pip install --upgrade pip
              pip install -e .[devel_full]
          else
              make venv
          fi
        shell: bash

      - name: build coverage file
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            pytest --cache-clear --cov=dff tests/ > pytest-coverage.txt
          else
            make test
          fi
        shell: bash